// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sport_App.Daten;

#nullable disable

namespace Sport_App.Migrations
{
    [DbContext(typeof(SportAppContext))]
    partial class SportAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Sport_App.Model.Nutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Alter")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Gewicht")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nutzern");
                });

            modelBuilder.Entity("Sport_App.Model.Sportart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Zeit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Sportarten");
                });

            modelBuilder.Entity("Sport_App.Model.TrainingsAufbau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anzahl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SportartID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingsplanID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SportartID");

                    b.ToTable("TrainingsAufbauten");
                });

            modelBuilder.Entity("Sport_App.Model.Trainingsplan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NutzerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingZeit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NutzerID");

                    b.ToTable("Trainingsplaene");
                });

            modelBuilder.Entity("TrainingsAufbauTrainingsplan", b =>
                {
                    b.Property<int>("TrainingsAufbauId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingsplansId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TrainingsAufbauId", "TrainingsplansId");

                    b.HasIndex("TrainingsplansId");

                    b.ToTable("TrainingsAufbauTrainingsplan");
                });

            modelBuilder.Entity("Sport_App.Model.TrainingsAufbau", b =>
                {
                    b.HasOne("Sport_App.Model.Sportart", "Sportart")
                        .WithMany()
                        .HasForeignKey("SportartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sportart");
                });

            modelBuilder.Entity("Sport_App.Model.Trainingsplan", b =>
                {
                    b.HasOne("Sport_App.Model.Nutzer", "Nutzer")
                        .WithMany("Trainingsplan")
                        .HasForeignKey("NutzerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nutzer");
                });

            modelBuilder.Entity("TrainingsAufbauTrainingsplan", b =>
                {
                    b.HasOne("Sport_App.Model.TrainingsAufbau", null)
                        .WithMany()
                        .HasForeignKey("TrainingsAufbauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sport_App.Model.Trainingsplan", null)
                        .WithMany()
                        .HasForeignKey("TrainingsplansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sport_App.Model.Nutzer", b =>
                {
                    b.Navigation("Trainingsplan");
                });
#pragma warning restore 612, 618
        }
    }
}
